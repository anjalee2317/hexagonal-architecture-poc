openapi: 3.0.0
info:
  title: Amplify Gen 2 Hexagonal Architecture PoC API
  description: |
    API documentation for the AWS Amplify Gen 2 Hexagonal Architecture Proof of Concept.
    This API provides task management functionality with proper authentication.
  version: 1.0.0
  contact:
    name: Development Team

servers:
  - url: https://f4brxi494m.execute-api.us-east-1.amazonaws.com/prod
    description: Production API Gateway endpoint

components:
  securitySchemes:
    CognitoAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Authentication using AWS Cognito JWT tokens.
        Get your token by authenticating with Cognito User Pool (ID: us-east-1_RavpYb3b1).

  schemas:
    Task:
      type: object
      properties:
        taskId:
          type: string
          description: Unique identifier for the task
        userId:
          type: string
          description: ID of the user who owns the task
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Detailed description of the task
        completed:
          type: boolean
          description: Whether the task is completed
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the task was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the task was last updated
      required:
        - taskId
        - userId
        - title
        - completed
        - createdAt

    TaskInput:
      type: object
      properties:
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Detailed description of the task
      required:
        - title

    TaskUpdateInput:
      type: object
      properties:
        title:
          type: string
          description: Updated title of the task
        description:
          type: string
          description: Updated description of the task
      required:
        - title

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: string
          description: Error code

paths:
  /tasks:
    get:
      summary: List all tasks
      description: Retrieves all tasks for the authenticated user
      security:
        - CognitoAuth: []
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Create a new task
      description: Creates a new task for the authenticated user
      security:
        - CognitoAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{taskId}:
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: ID of the task to operate on
    
    get:
      summary: Get a task by ID
      description: Retrieves a specific task by its ID
      security:
        - CognitoAuth: []
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      summary: Update a task
      description: Updates an existing task
      security:
        - CognitoAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateInput'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Delete a task
      description: Deletes a specific task
      security:
        - CognitoAuth: []
      responses:
        '204':
          description: Task deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{taskId}/complete:
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: ID of the task to mark as complete
    
    patch:
      summary: Mark a task as complete
      description: Updates a task's status to completed
      security:
        - CognitoAuth: []
      responses:
        '200':
          description: Task marked as complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
